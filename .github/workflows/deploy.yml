name: Application Deployment

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy Golang API
    permissions:
      deployments: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: "actions/checkout@v2"
        with:
          ref: master
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

      - name: Create GitHub Deployment
        uses: chrnorm/deployment-action@v2
        id: deployment
        with:
          token: "${{ github.token }}"
          environment-url: ${{ vars.MY_APP }}
          environment: production

      - name: Set up SSH Key and Deploy to VPS
        uses: appleboy/ssh-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 2202
          script: |
            cd /var/www/open_api_golang | tee /dev/tty
            git reset --hard | tee /dev/tty
            git pull origin master | tee /dev/tty
            go mod tidy | tee /dev/tty
            sudo systemctl restart open_api_golang | tee /dev/tty
            # Notify successful deployment
            echo "Deployment completed successfully." | tee /dev/tty

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: "${{ github.token }}"
          environment-url: ${{ vars.MY_APP }}
          state: "success"
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: "${{ github.token }}"
          environment-url: ${{ vars.MY_APP }}
          state: "failure"
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
